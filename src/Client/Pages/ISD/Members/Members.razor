@page "/isd/Members"
@attribute [MustHavePermission(FSHAction.View, FSHResource.CAD)]

<FshTitle Title="Members" Description="Manage Members" />

<EntityTable @bind-SearchString="_searchString" @ref="_table" TEntity="MemberDto" TId="Guid" TRequest="MemberViewModel" Context="@Context">
    <EditFormContent>
        <MudItem xs="12">
            <MudItem>
                @if(!string.IsNullOrEmpty(context.ImageInBytes))
                {
                    <MudAvatar Image ="@context.ImageInBytes" Square="true" Style="height: auto; width: auto; max-height: 100%"> </MudAvatar>
                }
                else
                {
                    <MudAvatar Image="@(string.IsNullOrEmpty(@context.ImagePath) ? string.Empty : (Config[ConfigNames.ApiBaseUrl] + @context.ImagePath))" Square="true" Style="height: auto; width: auto; max-height: 100%"> </MudAvatar>
                }
            </MudItem>
            <MudItem>
                <div>
                    <MudButton HtmlTag="label" Variant="Variant.Filled" Color="Color.Primary" Size="Size.Small" StartIcon="@Icons.Material.Filled.CloudUpload" for="fileInput">
                        Upload Picture
                    </MudButton>
                    @if(!Context.AddEditModal.IsCreate && !string.IsNullOrEmpty(context.ImagePath) && string.IsNullOrEmpty(context.ImageInBytes))
                    {
                        <MudButton HtmlTag="label" Variant="Variant.Filled" Color="Color.Info" Size="Size.Small" Target="_blank"
                            StartIcon="@Icons.Material.Filled.RemoveRedEye" Link="@(Config[ConfigNames.ApiBaseUrl] + @context.ImagePath)" Style="margin-left: 5px;" >
                            View
                        </MudButton>

                        <MudButton HtmlTag="label" Variant="Variant.Filled" Color="Color.Error" Size="Size.Small"
                            StartIcon="@Icons.Material.Filled.Delete" OnClick="SetDeleteCurrentImageFlag" Style="margin-left: 5px;" >
                            Delete
                        </MudButton>
                    }
                    @if(!string.IsNullOrEmpty(context.ImageInBytes))
                    {
                        <MudButton HtmlTag="label"  OnClick="ClearImageInBytes" Variant="Variant.Filled" Color="Color.Warning" Size="Size.Small" Target="_blank"
                            StartIcon="@Icons.Material.Filled.Clear" Style="margin-left: 5px;" >
                            Clear
                        </MudButton>
                    }
                </div>
                <InputFile id="fileInput" hidden OnChange="UploadFiles" />
            </MudItem>
        </MudItem>

        <MudItem xs="6" sm="4" md="3" lg="2">
            <MudNumericField Label="Increment Id" For="@(() => context.IncrementId)" @bind-Value="context.IncrementId" Variant="Variant.Filled" />
        </MudItem>
        <MudItem xs="6" sm="4" md="3" lg="2">
            <MudNumericField Label="Application Id" For="@(() => context.ApplicationId)" @bind-Value="context.ApplicationId" Variant="Variant.Filled" />
        </MudItem>
        <MudItem xs="6" sm="4" md="3" lg="2">
            <MudTextField Label="District" For="@(() => context.District)" @bind-Value="context.District" Variant="Variant.Filled" />
        </MudItem>
        <MudItem xs="12" sm="6" md="6" lg="3">
            <MudTextField Label="Municipality" For="@(() => context.Municipality)" @bind-Value="context.Municipality" Variant="Variant.Filled" />
        </MudItem>
        <MudItem xs="12" sm="6" md="6" lg="3">
            <MudTextField Label="Barangay" For="@(() => context.Barangay)" @bind-Value="context.Barangay" Variant="Variant.Filled" />
        </MudItem>
        <MudItem xs="12">
            <MudTextField Label="Member Name" For="@(() => context.Name)" @bind-Value="context.Name" Variant="Variant.Filled" />
        </MudItem>
        <MudItem xs="12">
            <MudTextField Label="Address" For="@(() => context.Address)" @bind-Value="context.Address" Variant="Variant.Filled" />
        </MudItem>
        <MudItem xs="12" sm="6" md="4" lg="3">
            <MudSelect Label="Gender" For="@(() => context.Gender)" @bind-Value="context.Gender" Variant="Variant.Filled" >
                <MudSelectItem Value="@("MALE")"/>
                <MudSelectItem Value="@("FEMALE")"/>
            </MudSelect>
        </MudItem>
        <MudItem xs="12" sm="6" md="4" lg="3">
            <MudDatePicker Label="Birth Date" For="@(() => context.BirthDate)" @bind-Date="context.BirthDate" DateFormat="MMMM dd, yyyy" Variant="Variant.Filled" />
        </MudItem>
        <MudItem xs="12" sm="6" md="4" lg="3">
            <MudTextField Label="Phone Number" For="@(() => context.PhoneNumber)" @bind-Value="context.PhoneNumber" Variant="Variant.Filled" />
        </MudItem>
        <MudItem xs="12" sm="6" md="4" lg="3">
            <MudDatePicker Label="Application Date" For="@(() => context.ApplicationDate)" @bind-Date="context.ApplicationDate" DateFormat="MMMM dd, yyyy" Variant="Variant.Filled" />
        </MudItem>
        <MudItem xs="12" sm="6" md="4" lg="3">
            <MudDatePicker Label="Membership Date" For="@(() => context.MembershipDate)" @bind-Date="context.MembershipDate" DateFormat="MMMM dd, yyyy" Variant="Variant.Filled" />
        </MudItem>
        <MudItem xs="12">
            <MudTextField Label="Description" For="@(() => context.Description)" @bind-Value="context.Description" />
        </MudItem>
        <MudItem xs="12">
            <MudTextField Label="Notes" For="@(() => context.Notes)" @bind-Value="context.Notes" />
        </MudItem>
        
    </EditFormContent>

</EntityTable>

@code
{
    private RenderFragment<MemberDto> TemplateNameAddress => context => __builder =>
    {
        <MudItem Class="d-flex flex-column">
            <MudText Typo="Typo.body1">
                <MudHighlighter Text="@context.Name" HighlightedText="@_searchString" />
            </MudText>
            <MudText Typo="Typo.caption">
                <MudHighlighter Text="@context.Address" HighlightedText="@_searchString" />
            </MudText>
        </MudItem>
    };

    private RenderFragment<MemberDto> TemplateGenderBirthDate => context => __builder =>
    {
        <MudItem Class="d-flex flex-column">
            <MudText Typo="Typo.body1">
                <MudHighlighter Text="@context.Gender" HighlightedText="@_searchString" />
            </MudText>
            <MudText Typo="Typo.caption">
                @context.BirthDate
            </MudText>
        </MudItem>
    };

    private RenderFragment<MemberDto> TemplateApplicationMembership => context => __builder =>
    {
        <MudItem Class="d-flex flex-column">
            <MudText Typo="Typo.body1">
                @context.ApplicationDate.ToString("MMM dd, yyyy")
            </MudText>
            <MudText Typo="Typo.caption">
                @context.MembershipDate.ToString("MMM dd, yyyy")
            </MudText>
        </MudItem>
    };

    private RenderFragment<MemberDto> TemplateDescriptionNotes => context => __builder =>
    {
        <MudItem Class="d-flex flex-column">
            <MudText Typo="Typo.subtitle2">
                <MudHighlighter Text="@context.Description" HighlightedText="@_searchString" />
            </MudText>
            <MudText Typo="Typo.caption">
                <MudHighlighter Text="@context.Notes" HighlightedText="@_searchString" />
            </MudText>
        </MudItem>
    };
}