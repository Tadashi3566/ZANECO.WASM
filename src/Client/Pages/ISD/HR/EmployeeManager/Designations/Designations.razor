@page "/hr/designations"
@page "/hr/designations/{employeeId:guid}"

@attribute [MustHavePermission(FSHAction.View, FSHResource.Employees)]

<FshTitle Title="Designations" Description="Employee Designation Management" />

<MudBreadcrumbs Items="_breadcrumbs"/>

<EntityTable @bind-SearchString="_searchString" @ref="_table" TEntity="DesignationDto" TId="Guid" TRequest="DesignationViewModel" Context="@Context">
    <AdvancedSearchContent>
        @if (_canViewEmployees)
        {
            <MudItem Class="mt-3">
                <AutocompleteEmployee @bind-Value="SearchEmployeeId" />
            </MudItem>
        }
    </AdvancedSearchContent>
    <ExtraActions>
        @if (_canViewEmployees)
        {
            <MudDivider />
            <MudMenuItem OnClick="(() => SetCurrentDesignation(context.EmployeeId, context.Id))" OnTouch="(() => SetCurrentDesignation(context.EmployeeId, context.Id))">Set as Current Designation</MudMenuItem>
        }
    </ExtraActions>
    <EditFormContent>
        @*<MudItem xs="12">
            <AutocompleteEmployee For="@(() => context.EmployeeId)" @bind-Value="SearchEmployeeId" Disabled="!SearchEmployeeId.Equals(Guid.Empty)" />
        </MudItem>*@

        <MudItem xs="12" sm="6" md="4" lg="3">
            <MudDatePicker Label="Start Date" For="@(() => context.StartDate)" @bind-Date="context.StartDate" DateFormat="MMMM dd, yyyy" Variant="Variant.Filled" />
        </MudItem>
        <MudItem xs="12" sm="6" md="4" lg="3">
            <MudDatePicker Label="End Date" For="@(() => context.EndDate)" @bind-Date="context.EndDate" DateFormat="MMMM dd, yyyy" Variant="Variant.Filled" />
        </MudItem>
        <MudItem xs="12" sm="6" md="6" lg="3">
            <AutocompleteArea For="@(() => context.Area)" @bind-Value="context.Area" />
        </MudItem>
        <MudItem xs="12">
            <AutocompleteDepartment For="@(() => context.Department)" @bind-Value="context.Department" />
        </MudItem>
        <MudItem xs="12">
            <AutocompleteDivision For="@(() => context.Division)" @bind-Value="context.Division" />
        </MudItem>
        <MudItem xs="12">
            <AutocompleteSection For="@(() => context.Section)" @bind-Value="context.Section" />
        </MudItem>
        <MudItem xs="12">
            <AutocompletePosition For="@(() => context.Position)" @bind-Value="context.Position" />
        </MudItem>

        <MudItem xs="12" sm="6" md="4" lg="3">
            <AutocompleteSalary For="@(() => context.SalaryNumber)" @bind-Value="context.SalaryNumber" InputMode="InputMode.numeric" />
        </MudItem>
        <MudItem xs="12" sm="6" md="4" lg="3">
            <MudSelect Label="Employment" For="@(() => context.EmploymentType)" @bind-Value="context.EmploymentType" Variant="Variant.Filled">
                <MudSelectItem Value="@("JOB ORDER")" />
                <MudSelectItem Value="@("PROBATION")" />
                <MudSelectItem Value="@("REGULAR")" />
                <MudSelectItem Value="@("RESIGNED")" />
                <MudSelectItem Value="@("RETIRED")" />
                <MudSelectItem Value="@("TERMINATED")" />
                <MudSelectItem Value="@("OTHER")" />
            </MudSelect>
        </MudItem>
        <MudItem xs="12" sm="6" md="4" lg="3">
            <MudSelect Label="Rate Type" For="@(() => context.RateType)" @bind-Value="context.RateType" Variant="Variant.Filled">
                <MudSelectItem Value="@("DAILY")" />
                <MudSelectItem Value="@("MONTHLY")" />
            </MudSelect>
        </MudItem>

        <MudItem xs="12" sm="6" md="4" lg="3">
            <MudNumericField Label="Per Day" For="@(() => context.RatePerDay)" @bind-Value="context.RatePerDay" Format="N2" InputMode="InputMode.numeric" Variant="Variant.Outlined" />
        </MudItem>
        <MudItem xs="12" sm="6" md="4" lg="3">
            <MudNumericField Label="Per Hour" For="@(() => context.RatePerHour)" @bind-Value="context.RatePerHour" Format="N0" Disabled=true Variant="Variant.Outlined" />
        </MudItem>

        <MudItem xs="12">
            <AutocompleteSchedule For="@(() => context.ScheduleId)" @bind-Value="context.ScheduleId" />
        </MudItem>

        <MudItem xs="12" sm="6" md="4" lg="3">
            <MudSelect Label="Pay Type" For="@(() => context.PayType)" @bind-Value="context.PayType" Variant="Variant.Filled">
                <MudSelectItem Value="@("BI-MONTHLY")" />
                <MudSelectItem Value="@("MONTHLY")" />
            </MudSelect>
        </MudItem>
        <MudItem xs="12" sm="6" md="4" lg="3">
            <AutocompleteTax For="@(() => context.TaxType)" @bind-Value="context.TaxType" />
        </MudItem>

        <MudItem xs="12">
            <MudTextField Label="Description" For="@(() => context.Description)" @bind-Value="context.Description" Lines="1" />
        </MudItem>
        <MudItem xs="12">
            <MudTextField Label="Notes" For="@(() => context.Notes)" @bind-Value="context.Notes" Lines="2" />
        </MudItem>

        <MudItem xs="12">
            <MudItem>
                @if (!string.IsNullOrEmpty(context.ImageInBytes))
                {
                    <MudAvatar Image="@context.ImageInBytes" Square="true" Style="height: auto; width: auto; max-height: 100%"> </MudAvatar>
                }
                else
                {
                    <MudAvatar Image="@(string.IsNullOrEmpty(@context.ImagePath) ? string.Empty : (Config[ConfigNames.ApiBaseUrl] + @context.ImagePath))" Square="true" Style="height: auto; width: auto; max-height: 100%"> </MudAvatar>
                }
            </MudItem>
            <MudItem>
                <div>
                    <MudButton HtmlTag="label" Variant="Variant.Filled" Color="Color.Primary" Size="Size.Small" StartIcon="@Icons.Material.Filled.CloudUpload" for="fileInput">
                        Upload Document
                    </MudButton>
                    @if (!Context.AddEditModal.IsCreate && !string.IsNullOrEmpty(context.ImagePath) && string.IsNullOrEmpty(context.ImageInBytes))
                    {
                        <MudButton HtmlTag="label" Variant="Variant.Filled" Color="Color.Info" Size="Size.Small" Target="_blank"
                                   StartIcon="@Icons.Material.Filled.RemoveRedEye" Href="@(Config[ConfigNames.ApiBaseUrl] + @context.ImagePath)" Style="margin-left: 5px;">
                            View
                        </MudButton>

                        <MudButton HtmlTag="label" Variant="Variant.Filled" Color="Color.Error" Size="Size.Small"
                                   StartIcon="@Icons.Material.Filled.Delete" OnClick="SetDeleteCurrentImageFlag" Style="margin-left: 5px;">
                            Delete
                        </MudButton>
                    }
                    @if (!string.IsNullOrEmpty(context.ImageInBytes))
                    {
                        <MudButton HtmlTag="label" OnClick="ClearImageInBytes" Variant="Variant.Filled" Color="Color.Warning" Size="Size.Small" Target="_blank"
                                   StartIcon="@Icons.Material.Filled.Clear" Style="margin-left: 5px;">
                            Clear
                        </MudButton>
                    }
                </div>
                <InputFile id="fileInput" hidden OnChange="UploadImage" />
            </MudItem>
        </MudItem>
    </EditFormContent>
</EntityTable>

@code
{
    private RenderFragment<DesignationDto> TemplateImage => context => __builder =>
    {
        <MudItem Class="d-flex flex-column">
            <MudAvatar Image="@(string.IsNullOrEmpty(@context.ImagePath) ? string.Empty : (Config[ConfigNames.ApiBaseUrl] + @context.ImagePath))" Rounded=true Style="height: 80px; width: 80px;"> </MudAvatar>
        </MudItem>
    };

    private RenderFragment<DesignationDto> TemplateAreaDepartment => context => __builder =>
    {
        <MudItem Class="d-flex flex-column">
            <MudText Typo="Typo.subtitle1">
                <MudHighlighter Text="@context.Area" HighlightedText="@_searchString" />
            </MudText>
            <MudText Typo="Typo.caption">
                <MudHighlighter Text="@context.Department" HighlightedText="@_searchString" />
            </MudText>
        </MudItem>
    };

    private RenderFragment<DesignationDto> TemplateDivisionSection => context => __builder =>
    {
        <MudItem Class="d-flex flex-column">
            <MudText Typo="Typo.subtitle1">
                <MudHighlighter Text="@context.Division" HighlightedText="@_searchString" />
            </MudText>
            <MudText Typo="Typo.caption">
                <MudHighlighter Text="@context.Section" HighlightedText="@_searchString" />
            </MudText>
        </MudItem>
    };

    private RenderFragment<DesignationDto> TemplatePositionType => context => __builder =>
    {
        <MudItem Class="d-flex flex-column">
            <MudText Typo="Typo.subtitle1">
                <MudHighlighter Text="@context.Position" HighlightedText="@_searchString" />
            </MudText>
            <MudText Typo="Typo.caption">
                <MudHighlighter Text="@context.EmploymentType" HighlightedText="@_searchString" />
            </MudText>
            <MudSwitch Checked="@context.IsActive" Color="Color.Primary" ReadOnly=true />
        </MudItem>
    };

    private RenderFragment<DesignationDto> TemplateEffectivityUntil => context => __builder =>
    {
        <MudItem Class="d-flex flex-column">
            <MudText Typo="Typo.subtitle1" Align="Align.End">
                @context.StartDate.ToString("MMMM dd, yyyy")
            </MudText>
            <MudText Typo="Typo.caption" Align="Align.End">
                @context.EndDate.ToString("MMMM dd, yyyy")
            </MudText>
        </MudItem>
    };

    private RenderFragment<DesignationDto> TemplateDescriptionNotes => context => __builder =>
    {
        <MudItem Class="d-flex flex-column">
            <MudText Typo="Typo.subtitle2">
                <MudHighlighter Text="@context.Description" HighlightedText="@_searchString" />
            </MudText>
            <MudText Typo="Typo.caption">
                <MudHighlighter Text="@context.Notes" HighlightedText="@_searchString" />
            </MudText>
        </MudItem>
    };
}