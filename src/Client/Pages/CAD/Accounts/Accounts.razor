@page "/cad/accounts"

@attribute [MustHavePermission(FSHAction.View, FSHResource.CAD)]

<FshTitle Title="Accounts" Description="Manage and Migrate Accounts" />

<EntityTable @bind-SearchString="@_searchString" @ref="_table" SelectedItems="@_selectedItems" TEntity="AccountDto" TId="Guid" TRequest="AccountViewModel" Context="@Context" PageSizes="@_pageSizes">
    <ExtraActions>
        <MudDivider />
        <MudMenuItem Icon="@Icons.Material.Filled.FormatListBulleted" OnClick="@(() => Navigation.NavigateTo($"/cad/ledger/{context.Id}"))" OnTouch="@(() => Navigation.NavigateTo($"/cad/ledger/{context.Id}"))" >Ledger</MudMenuItem>
        <MudDivider />
        <MudMenuItem Icon="@Icons.Material.Filled.ManageAccounts" OnClick="@(() => MigrateAccount("ACCOUNT"))" OnTouch="@(() => MigrateAccount("ACCOUNT"))">Migrate Acounts</MudMenuItem>
        <MudMenuItem Icon="@Icons.Material.Filled.ChecklistRtl" OnClick="@(() => MigrateAccount("LEDGER"))" OnTouch="@(() => MigrateAccount("LEDGER"))">Migrate Ledger</MudMenuItem>
    </ExtraActions>

    <EditFormContent>
        <MudItem xs="12" sm="6" md="4" lg="3">
            <MudSelect Label="Account Type" For="@(() => context.AccountType)" @bind-Value="context.AccountType" Variant="Variant.Filled" >
                <MudSelectItem Value="@("HIGH VOLTAGE")" />
                <MudSelectItem Value="@("LOW VOLTAGE")" />
                <MudSelectItem Value="@("RESIDENTIAL")" />
            </MudSelect>
        </MudItem>
        <MudItem xs="12" sm="6" md="4" lg="3">
            <MudTextField Label="Account Number" For="@(() => context.AccountNumber)" @bind-Value="context.AccountNumber" Variant="Variant.Filled"/>
        </MudItem>
        <MudItem xs="12" sm="6" md="4" lg="3">
            <MudNumericField Label="Multiplier" For="@(() => context.Multiplier)" @bind-Value="context.Multiplier" InputMode="InputMode.numeric" Variant="Variant.Filled" />
        </MudItem>

        <MudItem xs="12">
            <MudTextField Label="Account Name" For="@(() => context.Name)" @bind-Value="context.Name" Variant="Variant.Filled" />
        </MudItem>
        <MudItem xs="12">
            <MudTextField Label="Address" For="@(() => context.Address)" @bind-Value="context.Address" Variant="Variant.Filled" />
        </MudItem>

        <MudItem xs="12" sm="6" md="4" lg="3">
            <MudTextField Label="Feeder" For="@(() => context.Feeder)" @bind-Value="context.Feeder" Variant="Variant.Filled" />
        </MudItem>

        <MudItem xs="12" sm="6" md="4" lg="3">
            <MudTextField Label="Area" For="@(() => context.Area)" @bind-Value="context.Area" Variant="Variant.Filled" />
        </MudItem>
        <MudItem xs="12" sm="6" md="4" lg="3">
            <MudTextField Label="Barangay" For="@(() => context.Route)" @bind-Value="context.Route" Variant="Variant.Filled" />
        </MudItem>
        <MudItem xs="12" sm="6" md="4" lg="3">
            <MudTextField Label="Route" For="@(() => context.Cipher)" @bind-Value="context.Cipher" Variant="Variant.Filled" />
        </MudItem>

        <MudItem xs="12" sm="6" md="4" lg="3">
            <MudTextField Label="Pole" For="@(() => context.Pole)" @bind-Value="context.Pole" Variant="Variant.Filled" />
        </MudItem>
        <MudItem xs="12" sm="6" md="4" lg="3">
            <MudTextField Label="Transformer" For="@(() => context.Transformer)" @bind-Value="context.Transformer" Variant="Variant.Filled" />
        </MudItem>

        <MudItem xs="12" sm="6" md="4" lg="3">
            <MudTextField Label="Meter Brand" For="@(() => context.MeterBrand)" @bind-Value="context.MeterBrand" Variant="Variant.Filled" />
        </MudItem>
        <MudItem xs="12" sm="6" md="4" lg="3">
            <MudTextField Label="Meter Serial" For="@(() => context.MeterSerial)" @bind-Value="context.MeterSerial" Variant="Variant.Filled" />
        </MudItem>

        <MudItem xs="12" sm="6" md="4" lg="3">
            <MudTextField Label="Tag" For="@(() => context.Tag)" @bind-Value="context.Tag" Variant="Variant.Filled" />
        </MudItem>

        <MudItem xs="12" sm="6" md="4" lg="3">
            <MudTextField Label="Bill Month" For="@(() => context.BillMonth)" @bind-Value="context.BillMonth" Variant="Variant.Filled" />
        </MudItem>
        <MudItem xs="12" sm="6" md="4" lg="3">
            <SfDatePicker TValue="DateTime"
                          @bind-Value="context.PresentReadingDate"
                          CssClass="e-bigger e-filled mt-1"
                          Format="MMMM dd, yyyy"
                          FloatLabelType="Syncfusion.Blazor.Inputs.FloatLabelType.Auto"
                          Placeholder="Present Reading Date"
                          ShowTodayButton=true />
        </MudItem>
        <MudItem xs="12" sm="6" md="4" lg="3">
            <MudTextField Label="KWH" For="@(() => context.UsedKWH)" @bind-Value="context.UsedKWH" Format="N2" Variant="Variant.Filled" />
        </MudItem>
        <MudItem xs="12" sm="6" md="4" lg="3">
            <MudNumericField Label="Bill Amount" For="@(() => context.BillAmount)" @bind-Value="context.BillAmount" Format="N2" Variant="Variant.Filled" />
        </MudItem>

        <MudItem xs="12">
            <MudTextField Label="Description" For="@(() => context.Description)" @bind-Value="context.Description" Lines="1" />
        </MudItem>
        <MudItem xs="12">
            <MudTextField Label="Notes" For="@(() => context.Notes)" @bind-Value="context.Notes" Lines="2" />
        </MudItem>

        <MudItem xs="12">
            <MudItem>
                @if (!string.IsNullOrEmpty(context.ImageInBytes))
                {
                    <MudAvatar Image="@context.ImageInBytes" Square="true" Style="height: auto; width: auto; max-height: 100%"> </MudAvatar>
                }
                else
                {
                    <MudAvatar Image="@(string.IsNullOrEmpty(@context.ImagePath) ? string.Empty : (Config[ConfigNames.ApiBaseUrl] + @context.ImagePath))" Square="true" Style="height: auto; width: auto; max-height: 100%"> </MudAvatar>
                }
            </MudItem>
            <MudItem>
                <div>
                    <MudButton HtmlTag="label" Variant="Variant.Filled" Color="Color.Primary" Size="Size.Small" StartIcon="@Icons.Material.Filled.CloudUpload" for="fileInput">
                        Upload
                    </MudButton>
                    @if (!Context.AddEditModal.IsCreate && !string.IsNullOrEmpty(context.ImagePath) && string.IsNullOrEmpty(context.ImageInBytes))
                    {
                        <MudButton HtmlTag="label" Variant="Variant.Filled" Color="Color.Info" Size="Size.Small" Target="_blank"
                                   StartIcon="@Icons.Material.Filled.RemoveRedEye" Href="@(Config[ConfigNames.ApiBaseUrl] + @context.ImagePath)" Style="margin-left: 5px;">
                            View
                        </MudButton>

                        <MudButton HtmlTag="label" Variant="Variant.Filled" Color="Color.Error" Size="Size.Small"
                                   StartIcon="@Icons.Material.Filled.Delete" OnClick="SetDeleteCurrentImageFlag" Style="margin-left: 5px;">
                            Delete
                        </MudButton>
                    }
                    @if (!string.IsNullOrEmpty(context.ImageInBytes))
                    {
                        <MudButton HtmlTag="label" OnClick="ClearImageInBytes" Variant="Variant.Filled" Color="Color.Warning" Size="Size.Small" Target="_blank"
                                   StartIcon="@Icons.Material.Filled.Clear" Style="margin-left: 5px;">
                            Clear
                        </MudButton>
                    }
                </div>
                <InputFile id="fileInput" hidden OnChange="UploadImage" />
            </MudItem>
        </MudItem>
    </EditFormContent>
</EntityTable>

@code {
    private RenderFragment<AccountDto> TemplateNameAddress => context => __builder =>
    {
        <MudItem Class="d-flex flex-column">
            <MudText Typo="Typo.body2">
                <MudHighlighter Text="@context.Name" HighlightedText="@_searchString" />
            </MudText>
            <MudText Typo="Typo.caption">
                <MudHighlighter Text="@context.Address" HighlightedText="@_searchString" />
            </MudText>
        </MudItem>
    };

    private RenderFragment<AccountDto> TemplateBillingDate => context => __builder =>
    {
        <MudItem Class="d-flex flex-column">
            <MudText Align="Align.Right" Typo="Typo.caption">
                @context.PreviousReadingDate.ToString("MMM dd, yyyy")
            </MudText>
            <MudText Align="Align.Right" Typo="Typo.subtitle1">
                @context.PresentReadingDate.ToString("MMM dd, yyyy")
            </MudText>
        </MudItem>
    };

    private RenderFragment<AccountDto> TemplateDescriptionNotes => context => __builder =>
    {
        <MudItem Class="d-flex flex-column">
            <MudText Typo="Typo.subtitle2">
                <MudHighlighter Text="@context.Description" HighlightedText="@_searchString" />
            </MudText>
            <MudText Typo="Typo.caption">
                <MudHighlighter Text="@context.Notes" HighlightedText="@_searchString" />
            </MudText>
        </MudItem>
    };
}