@page "/sms/templates"

@attribute [MustHavePermission(FSHAction.View, FSHResource.SMS)]

<FshTitle Title="Message Templates" Description="Manage Message Templates" />

<EntityTable @bind-SearchString="_searchString" @ref="_table" TEntity="MessageTemplateDto" TId="Guid" TRequest="MessageTemplateViewModel" Context="@Context">
    <ExtraActions>
        <MudDivider />
        <MudMenuItem Icon="@Icons.Material.Filled.CopyAll"
                     OnClick="@(() => MessageTemplateCopy(context.Message))"
                     OnTouch="@(() => MessageTemplateCopy(context.Message))">Copy Message</MudMenuItem>
        <MudMenuItem Icon="@Icons.Material.Filled.ContentCopy"
                     OnClick="@(() => MessageTemplateDuplicate(context))"
                     OnTouch="@(() => MessageTemplateDuplicate(context))">Duplicate</MudMenuItem>
        <MudMenuItem Icon="@Icons.Material.Filled.Send"
                     OnClick="@(() => SendSMS(@context))"
                     OnTouch="@(() => SendSMS(@context))">Send</MudMenuItem>
    </ExtraActions>
    <EditFormContent>
        <MudItem xs="12" sm="6" md="4" lg="3" xl="2" xxl="1">
            <MudSelect T="string" Label="Template Type" @bind-Value="context.TemplateType" For="@(() => context.TemplateType)" Variant="Variant.Filled">
                <MudSelectItem Value="@("ADVISORY")" />
                <MudSelectItem Value="@("POWER INTERRUPTION")" />
                <MudSelectItem Value="@("OTHERS")" />
            </MudSelect>
        </MudItem>
        <MudItem xs="12" sm="6" md="4" lg="3" xl="2" xxl="1">
            <MudSelect T="string" Label="Message Type" @bind-Value="context.MessageType" For="@(() => context.MessageType)" Variant="Variant.Filled">
                <MudSelectItem Value="@("sms.automatic")" />
                <MudSelectItem Value="@("sms.automatic.flash")" />
            </MudSelect>
        </MudItem>
        <MudItem xs="12" sm="6" md="4" lg="3" xl="2" xxl="1">
            <MudDatePicker Label="Schedule" For="@(() => context.ScheduleDate)" @bind-Date="context.ScheduleDate" DateFormat="MMMM dd, yyyy" MinDate="@DateTime.Today.AddYears(-1)" Variant="Variant.Filled" />
        </MudItem>
        <MudItem xs="12" sm="6" md="4" lg="3" xl="2" xxl="1">
            <MudSwitch Class="mt-3" Label="Use m360 API (Default:SIM)" For="@(() => context.IsAPI)" @bind-Checked="context.IsAPI" Color="Color.Tertiary" />
        </MudItem>
        <MudItem xs="12">
            <MudTextField Counter=160 Immediate=true Label="Subject" For="@(() => context.Subject)" @bind-Value="context.Subject" Variant="Variant.Filled" />
        </MudItem>
        <MudItem xs="12">
            <MudTextField Counter=160 Immediate=true HelperText="Recommended SMS is up to 160 characters (0.33 cents)" Label="Message" For="@(() => context.Message)" @bind-Value="context.Message" Lines="10" Variant="Variant.Filled" />
        </MudItem>
        <MudItem xs="12">
            <MudTextField Label="Recepients" For="@(() => context.Recepients)" @bind-Value="context.Recepients" Lines="10" Variant="Variant.Filled" />
        </MudItem>
        <MudItem xs="12">
            <MudTextField Label="Description" For="@(() => context.Description)" @bind-Value="context.Description" Lines="1" />
        </MudItem>
        <MudItem xs="12">
            <MudTextField Label="Notes" For="@(() => context.Notes)" @bind-Value="context.Notes" Lines="2" />
        </MudItem>

        <MudItem xs="12">
            <MudItem>
                @if (!string.IsNullOrEmpty(context.ImageInBytes))
                {
                    <MudAvatar Image="@context.ImageInBytes" Square="true" Style="height: auto; width: auto; max-height: 100%"> </MudAvatar>
                }
                else
                {
                    <MudAvatar Image="@(string.IsNullOrEmpty(@context.ImagePath) ? string.Empty : (Config[ConfigNames.ApiBaseUrl] + @context.ImagePath))" Square="true" Style="height: auto; width: auto; max-height: 100%"> </MudAvatar>
                }
            </MudItem>
            <MudItem>
                <div>
                    <MudButton HtmlTag="label" Variant="Variant.Filled" Color="Color.Primary" Size="Size.Small" StartIcon="@Icons.Material.Filled.CloudUpload" for="fileInput">
                        Upload
                    </MudButton>
                    @if (!Context.AddEditModal.IsCreate && !string.IsNullOrEmpty(context.ImagePath) && string.IsNullOrEmpty(context.ImageInBytes))
                    {
                        <MudButton HtmlTag="label" Variant="Variant.Filled" Color="Color.Info" Size="Size.Small" Target="_blank"
                               StartIcon="@Icons.Material.Filled.RemoveRedEye" Link="@(Config[ConfigNames.ApiBaseUrl] + @context.ImagePath)" Style="margin-left: 5px;">
                            View
                        </MudButton>

                        <MudButton HtmlTag="label" Variant="Variant.Filled" Color="Color.Error" Size="Size.Small"
                               StartIcon="@Icons.Material.Filled.Delete" OnClick="SetDeleteCurrentImageFlag" Style="margin-left: 5px;">
                            Delete
                        </MudButton>
                    }
                    @if (!string.IsNullOrEmpty(context.ImageInBytes))
                    {
                        <MudButton HtmlTag="label" OnClick="ClearImageInBytes" Variant="Variant.Filled" Color="Color.Warning" Size="Size.Small" Target="_blank"
                               StartIcon="@Icons.Material.Filled.Clear" Style="margin-left: 5px;">
                            Clear
                        </MudButton>
                    }
                </div>
                <InputFile id="fileInput" hidden OnChange="UploadImage" />
            </MudItem>
        </MudItem>
    </EditFormContent>
</EntityTable>

@code {
    private RenderFragment<MessageTemplateDto> TemplateImage => context => __builder =>
    {
        <MudItem Class="d-flex flex-column">
            <MudAvatar Image="@(string.IsNullOrEmpty(@context.ImagePath) ? string.Empty : (Config[ConfigNames.ApiBaseUrl] + @context.ImagePath))" Rounded=true Style="height: 80px; width: 80px;" />
        </MudItem>
    };

    private RenderFragment<MessageTemplateDto> TemplateApiFastMode => context => __builder =>
    {
        <MudItem Class="d-flex flex-column">
            <MudSwitch @bind-Checked="@context.IsAPI" Label="API" Color="Color.Primary" ReadOnly=true></MudSwitch>
            <MudSwitch @bind-Checked="@context.IsSent" Label="Sent" Color="Color.Secondary" ReadOnly=true></MudSwitch>
        </MudItem>
    };

    private RenderFragment<MessageTemplateDto> TemplateSubjectMessage => context => __builder =>
    {
        <MudItem Class="d-flex flex-column">
            <MudText Typo="Typo.subtitle2">
                <MudHighlighter Text="@context.Subject" HighlightedText="@_searchString" />
            </MudText>
            <MudText Typo="Typo.caption">
                <MudHighlighter Text="@context.Message" HighlightedText="@_searchString" />
            </MudText>
        </MudItem>
    };

    private RenderFragment<MessageTemplateDto> TemplateDescriptionNotes => context => __builder =>
    {
        <MudItem Class="d-flex flex-column">
            <MudText Typo="Typo.subtitle2">
                <MudHighlighter Text="@context.Description" HighlightedText="@_searchString" />
            </MudText>
            <MudText Typo="Typo.caption">
                <MudHighlighter Text="@context.Notes" HighlightedText="@_searchString" />
            </MudText>
        </MudItem>
    };
}