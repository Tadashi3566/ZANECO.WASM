@using Syncfusion.Blazor.BarcodeGenerator

@inject ILocalStorageService _localStorage

<MudGrid Class="d-flex flex-column" Spacing="5">
    <MudPaper Class="ma-5" Elevation="25">
        @if (_employeeId is not null)
        {
            <SfQRCodeGenerator Width="350px" Height="300px" Value="@_employeeId">
                <QRCodeGeneratorDisplayText Text="@_name"></QRCodeGeneratorDisplayText>
            </SfQRCodeGenerator>
        }
    </MudPaper>
    <MudPaper Class="ma-5" Elevation="25">
        @if (_sandurotId is not null)
        {
            <SfBarcodeGenerator Width="350px" Height="250px" Value="@_sandurotId">
                <BarcodeGeneratorDisplayText Text="@_name"></BarcodeGeneratorDisplayText>
            </SfBarcodeGenerator>
        }
    </MudPaper>
</MudGrid>

@code {
    [CascadingParameter]
    protected Task<AuthenticationState> AuthState { get; set; } = default!;
    [Inject]
    protected IAuthenticationService AuthService { get; set; } = default!;
    [Inject]
    protected IPersonalClient Client { get; set; } = default!;

    private UserDetailsDto? userDto = new();

    private string? _employeeId;
    private string? _sandurotId;
    private string _name = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        if ((await AuthState).User is { } user)
        {
            _name = await _localStorage.GetItemAsStringAsync("employeeName");
            _employeeId = await _localStorage.GetItemAsStringAsync("employeeId");
            _sandurotId = await _localStorage.GetItemAsStringAsync("sandurotId");

            StateHasChanged();

            var userDto = await Client.GetProfileAsync();
            if (userDto is not null)
            {
                _name = $"{userDto.FirstName} {userDto.LastName}";

                await _localStorage!.SetItemAsStringAsync("employeeName", _name);

                if (userDto.EmployeeId is not null)
                {
                    _employeeId = userDto.EmployeeId.ToString();
                    await _localStorage.SetItemAsStringAsync("employeeId", _employeeId);
                }
                if (userDto.SandurotId is not null)
                {
                    _sandurotId = userDto.SandurotId.ToString();
                    await _localStorage.SetItemAsStringAsync("sandurotId", _sandurotId);
                }
            }
        }

        StateHasChanged();
    }
}